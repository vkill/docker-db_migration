#
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('Gemfile', __dir__)
require 'bundler/setup'

#
Bundler.require(:default)

#
# https://github.com/rails/rails/blob/master/activerecord/lib/active_record/tasks/database_tasks.rb
#
require 'ostruct'
require 'pathname'
require 'yaml'
require 'active_record'

Rails = OpenStruct.new
root = Pathname.new(File.expand_path('..', __FILE__))
Rails.root = root
env = ActiveSupport::StringInquirer.new('production')
Rails.env = env

class SeedLoader
  def load_seed
  end
end

include ActiveRecord::Tasks
DatabaseTasks.env = env
if File.exists?(root.join('config/database.yml').to_s)
  DatabaseTasks.database_configuration = YAML.load_file(root.join('config/database.yml').to_s)
end
DatabaseTasks.db_dir = root.join('db').to_s
migrations_paths = []
if File.exists?(root.join('db/migrate').to_s)
  migrations_paths.push root.join('db/migrate').to_s
end
DatabaseTasks.migrations_paths = migrations_paths
DatabaseTasks.seed_loader = SeedLoader.new
DatabaseTasks.root = root

DatabaseTasks.create_current

#
namespace :db do
  desc "Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)."
  task :migrate do
    DatabaseTasks.migrate
  end

  desc "Rolls the schema back to the previous version (specify steps w/ STEP=n)."
  task :rollback do
    step = ENV["STEP"] ? ENV["STEP"].to_i : 1
    ActiveRecord::Base.connection.migration_context.rollback(step)
  end
end
